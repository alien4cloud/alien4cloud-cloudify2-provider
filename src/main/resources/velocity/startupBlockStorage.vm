import org.cloudifysource.utilitydomain.context.ServiceContextFactory

log.info "startupBlockStorage.groovy : starting startupBlockStorage <$storageId> script"

def context = ServiceContextFactory.getServiceContext()

def createResult = $createCommand
if(createResult == null || !createResult.volumeId || !createResult.device){
		throw new IllegalStateException("The volume creation script must return a map [\"volumeId\": volumeId, \"device\":device ]containing the created volumeId and the attached device name.")
}
def volumeId = createResult.volumeId
def device = createResult.device
$createdEvent

def configureResult = $configureCommand
if(configureResult == null ){
		throw new IllegalStateException("The volume configuring script must return the mounted path of the volume, \"storageLocation\".")
}
$configuredEvent

log.info "Storage volume <$storageId>: volumeId <${volumeId}>, device <${device}>, path <${configureResult}>"
context.attributes.thisInstance["$storageId:volumeId"] = volumeId 
context.attributes.thisInstance["$storageId:storageDevice"] = device
context.attributes.thisInstance["$storageId:storageLocation"] = configureResult
$startedEvent
$availableEvent

log.info "startupBlockStorage.groovy : startupBlockStorage <$storageId> script  End"