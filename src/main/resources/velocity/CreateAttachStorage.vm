import org.cloudifysource.utilitydomain.context.ServiceContextFactory

def context = ServiceContextFactory.getServiceContext()
if(volumeId == null || volumeId.trim().isEmpty()){
	if(!storageTemplate || storageTemplate.trim().isEmpty()){
		throw new IllegalArgumentException("<$storageId> - A storage template Id is expected!")
	}
	log.info "<$storageId> - Creating a volume using the storage template <${storageTemplate}>..."
	volumeId = context.storage.createVolume(storageTemplate)
	context.attributes.thisInstance["$storageId:formatVolume"] = true;
	log.info "<$storageId> - volume created!"
}

log.info "<$storageId> - Storage volume: volumeId <${volumeId}>, device <${device}>"

log.info "<$storageId> - attaching storage volume <${volumeId}> to <${device}>... "
context.storage.attachVolume(volumeId, device)
log.info "<$storageId> - volume attached!"

return [volumeId: volumeId, device: device]
